<?php

/**
 * @file
 * Contains repec.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\node\Entity\Node;
use Drupal\repec\Repec;

/**
 * Implements hook_help().
 */
function repec_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the repec module.
    case 'help.page.repec':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('RDF integration with Research Papers in Economics (RePEc).') . '</p>';
      // @todo translation
      $output .= '<p>This module helps you create a repository for <a href="http://repec.org" target="_blank">Research Papers in Economics</a> (RePEc). A template is created an updated automatically when new content is added to a content type matched in the Paper Series. <br>
                     RePEc is a collaborative effort of hundreds of volunteers in 82 countries to enhance the dissemination of research in Economics and related sciences. Collected papers are searchable from the <a href="http://ideas.repec.org" target="_blank">RePEc Ideas website.</a></p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_insert().
 */
function repec_entity_insert(EntityInterface $entity) {
  /** @var \Drupal\repec\RepecInterface $repec */
  $repec = \Drupal::service('repec');
  // @todo remove limitation to node while covering other entity types
  if ($entity->getEntityTypeId() === 'node' && $repec->isBundleEnabled($entity)) {
    assert($entity instanceof Node);
    if ($entity->isPublished()) {
      $repec->createEntityTemplate($entity, Repec::SERIES_WORKING_PAPER);
    }
  }
}

/**
 * Implements hook_entity_update().
 */
function repec_entity_update(EntityInterface $entity) {
  /** @var \Drupal\repec\RepecInterface $repec */
  $repec = \Drupal::service('repec');
  // @todo remove limitation to node while covering other entity types
  if ($entity->getEntityTypeId() === 'node' && $repec->isBundleEnabled($entity)) {
    assert($entity instanceof Node);
    if ($entity->isPublished()) {
      $repec->updateEntityTemplate($entity, Repec::SERIES_WORKING_PAPER);
    }
    else {
      $repec->deleteEntityTemplate($entity);
    }
  }
}

/**
 * Implements hook_entity_delete().
 */
function repec_entity_delete(EntityInterface $entity) {
  /** @var \Drupal\repec\RepecInterface $repec */
  $repec = \Drupal::service('repec');
  // @todo remove limitation to node while covering other entity types
  if ($entity->getEntityTypeId() === 'node' && $repec->isBundleEnabled($entity)) {
    assert($entity instanceof Node);
    $repec->deleteEntityTemplate($entity);
  }
}

/**
 * Implements hook_repec_paper_mapping().
 */
function repec_repec_paper_mapping(ContentEntityInterface $entity) {
  // @todo implement
}

/**
 * Implements hook_repec_series_mapping().
 */
function repec_repec_series_mapping() {
  // @todo implement
}

/**
 * Implements hook_repec_archive_mapping().
 */
function repec_repec_archive_mapping() {
  // @todo implement
}
